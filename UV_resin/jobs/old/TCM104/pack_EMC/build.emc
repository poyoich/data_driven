(* EMC: Script *)

(* Created by emc_setup.pl v4.1, August 1, 2021
   on Sun Feb 26 13:12:15 JST 2023 *)

(* define variables *)

variables	= {
  seed		-> -1,
  ntotal	-> 5000,
  fshape	-> 1,
  output	-> "pack_mol",
  field		-> "pcff/pcff",
  location1	-> "../../field/",

  nav		-> 0.6022141179,
  temperature	-> 300,
  radius	-> 5,
  nrelax	-> 100,
  weight_nonbond -> 0.0001,
  weight_bond	-> 0.0001,
  weight_focus	-> 1,
  cutoff	-> 9.5,
  charge_cutoff	-> 9.5,
  kappa		-> 4,

  density1	-> 0.45,
  lprevious	-> 0,
  lphase	-> 0,

  f_mol1	-> 90,
  f_mol2	-> 10,

  chem_mol1	-> "CCC1(COCC2CCCCC2)COC1",
  chem_mol2	-> "CC[C@](COCC1CCCCC1)(COC[C@](CC)(COCC1CCCCC1)C)CO"
};

output		= {
  debug		-> false,
  exit		-> true,
  info		-> true,
  warning	-> true
};

(* define force field *)

field		= {
  id		-> pcff,
  mode		-> cff,
    name	-> {location1+field+".frc", location1+field+"_templates.dat"},
  compress	-> false
};

(* define groups *)

groups		= {
  group		-> {
    id		-> mol1,
    depth	-> 8,
    chemistry	-> chem_mol1
  },
  group		-> {
    id		-> mol2,
    depth	-> 8,
    chemistry	-> chem_mol2
  }
};

field		= {
  mode		-> apply,
  check		-> {
    atomistic	-> true,
    charge	-> true
  },
  debug		-> false
};

(* determine simulation sizing *)

variables	= {

  (* lengths *)

  lg_mol1	-> nsites(mol1),
  lg_mol2	-> nsites(mol2),
  l_mol1	-> lg_mol1,
  norm_mol1	-> 1,
  l_mol2	-> lg_mol2,
  norm_mol2	-> 1,

  (* masses *)

  mg_mol1	-> mass(mol1),
  mg_mol2	-> mass(mol2),

  m_mol1	-> mg_mol1,
  norm_mol1	-> 1,
  m_mol2	-> mg_mol2,
  norm_mol2	-> 1,

  (* mass fractions *)

  f_mol1	-> f_mol1*l_mol1/m_mol1,
  f_mol2	-> f_mol2*l_mol2/m_mol2,

  (* normalization *)

  norm		-> f_mol1+f_mol2,

  f_mol1	-> f_mol1/norm,
  f_mol2	-> f_mol2/norm,

  (* sizing *)

  n_mol1	-> int(f_mol1*ntotal/l_mol1+0.5),
  n_mol2	-> int(f_mol2*ntotal/l_mol2+0.5),

  (* system sizing *)

  ntotal	-> 0,
  mtotal	-> 0
};

(* define interactions *)

simulation	= {
  units		-> {
    permittivity -> 1,
    seed	-> seed
  },
  types		-> {
    coulomb	-> {
      pair	-> {active -> true, cutoff -> charge_cutoff}
    }
  }
};

(* clusters phase 1 *)

clusters	= {
  progress	-> none,
  cluster	-> {
    id		-> mol1, system -> main, group -> mol1, n -> n_mol1},
  cluster	-> {
    id		-> mol2, system -> main, group -> mol2, n -> n_mol2}
};

field		= {
  mode		-> apply,
  check		-> {
    atomistic	-> true,
    charge	-> true
  },
  debug		-> false
};

(* build phase 1 *)

variables	= {
  nphase1	-> ntotal()-ntotal,
  mphase1	-> mtotal()-mtotal,
  vphase1	-> mphase1/nav/density1,
  lbox		-> (vphase1/fshape)^(1/3),
  lphase1	-> fshape*lbox,
  lxx		-> lphase1,
  lyy		-> lbox,
  lzz		-> lbox,
  lzy		-> 0,
  lzx		-> 0,
  lyx		-> 0,
  lphase	-> lphase1,
  ntotal	-> nphase1,
  mtotal	-> mphase1,
  vtotal	-> vphase1
};

types		= {
  cff		-> {
    pair	-> {active -> true, mode -> repulsive, cutoff -> cutoff}
  }
};

build		= {
  system	-> {
    id		-> main,
    split	-> false,
    geometry	-> {xx -> lxx, yy -> lyy, zz -> lzz,
		    zy -> lzy, zx -> lzx, yx -> lyx},
    temperature	-> temperature,
    flag	-> {charge -> true, geometry -> true, map -> true, pbc -> true}
  },
  select	-> {
    progress	-> list,
    frequency	-> 1,
    name	-> "error",
    order	-> random,
    cluster	-> {mol1, mol2},
    relax	-> {ncycles -> nrelax, radius -> radius},
    grow	-> {
      method	-> energetic,
      check	-> all,
      nbonded	-> 20,
      ntrials	-> 20,
      niterations -> 1000,
      theta	-> 0,
      weight	-> {
	bonded	-> weight_bond, nonbonded -> weight_nonbond,
	focus	-> weight_focus}
    }
  }
};

force		= {style -> none, message -> nkt};
force		= {style -> init, message -> nkt};

(* storage *)

put		= {name -> output, compress -> true};

pdb		= {name -> output, compress -> true, extend -> false,
		   forcefield -> cff, detect -> false, hexadecimal -> false,
		   unwrap -> true, pbc -> true, atom -> index, residue -> index,
		   segment -> index, rank -> false, vdw -> false, cut -> false,
		   fixed -> true, rigid -> true, connectivity -> false,
		   parameters -> false};

lammps		= {name -> output, mode -> put, forcefield -> cff,
		   parameters -> true, types -> false, unwrap -> true,
		   charges -> true, ewald -> true};
